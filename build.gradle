plugins {
    id("java")
    id("io.papermc.paperweight.userdev").version("1.7.1")
    id("xyz.jpenilla.run-paper").version("2.3.0")
    id("com.github.johnrengelman.shadow").version("8.1.1")
}

setGroup("com.jnngl")
setVersion("1.0.2-SNAPSHOT")

repositories {
    mavenCentral()
    maven {
        setName("papermc-repo")
        setUrl("https://repo.papermc.io/repository/maven-public/")
    }
    maven {
        setName("sonatype")
        setUrl("https://oss.sonatype.org/content/groups/public/")
    }
}

dependencies {
    implementation 'org.ow2.asm:asm:9.7'
    paperweightDevelopmentBundle("io.papermc.paper:dev-bundle:1.21-R0.1-SNAPSHOT")
    implementation("net.elytrium:serializer:1.1.1")
    implementation("com.jnngl:mapcolor:1.0.1")
    compileOnly("io.papermc.paper:paper-api:1.21-R0.1-SNAPSHOT")
    annotationProcessor("org.projectlombok:lombok:1.18.30")
    compileOnly("org.projectlombok:lombok:1.18.30")
    implementation("com.j256.ormlite:ormlite-jdbc:6.1")
    implementation("org.xerial:sqlite-jdbc:3.45.0.0")
    implementation("org.bstats:bstats-bukkit:3.0.2")
    compileOnly(files("libs/VulcanAPI.jar"))
}

shadowJar {
    relocate("net.elytrium.serializer", "com.jnngl.vanillaminimaps.serializer")
    relocate("org.bstats", "com.jnngl.vanillaminimaps.metrics")
    exclude("org/slf4j/**")
    minimize()
}

def targetJavaVersion = 21
java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    setSourceCompatibility(javaVersion)
    setTargetCompatibility(javaVersion)
    if (JavaVersion.current() < javaVersion) {
        getToolchain().setLanguageVersion(JavaLanguageVersion.of(targetJavaVersion))
    }
}

tasks.withType(JavaCompile).configureEach({
    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        getOptions().getRelease().set(targetJavaVersion)
    }
})

processResources {
    def props = [version: version]
    getInputs().properties(props)
    filteringCharset("UTF-8")
    filesMatching("plugin.yml") {
        expand(props)
    }
}

reobfJar.dependsOn(shadowJar)
assemble.dependsOn(reobfJar)